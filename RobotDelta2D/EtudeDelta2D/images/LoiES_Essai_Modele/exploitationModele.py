# -*- coding: utf-8 -*-
"""
Created on Tue Feb  3 17:29:23 2015

@author: Xavier
"""
import matplotlib.pyplot as plt
import numpy as np
import math

f_bras_sw = "SW_LoiES/AngleBras.txt" 
f_mot_sw = "SW_LoiES/AngleMoteur.txt" 


fid_bras_sw= open(f_bras_sw ,'r')
fid_mot_sw= open(f_mot_sw ,'r')
temps=[]
bras_sw=[]
mot_sw=[]
fid_bras_sw.readline()
fid_bras_sw.readline()
fid_mot_sw.readline()
fid_mot_sw.readline()
for ligne in fid_bras_sw:
    ligne = ligne.replace("\n","")    
    ligne = ligne.split(" ")    
    if len(ligne)==2 :
        temps.append(float(ligne[0]))
        bras_sw.append(math.degrees(float(ligne[1])))
fid_bras_sw.close()

for ligne in fid_mot_sw:
    ligne = ligne.replace("\n","")    
    ligne = ligne.split(" ")    
    if len(ligne)==2 :
        mot_sw.append(math.degrees(float(ligne[1])))
fid_mot_sw.close()

#plt.plot(temps,mot_sw)
#plt.plot(mot_sw,bras_sw)

#plt.show()

from scipy import stats

slope, intercept, r_value, p_value, std_err = stats.linregress(mot_sw,bras_sw)
regress = [slope*i + intercept for i in mot_sw]
titre = str(slope)+"gamma"+str(intercept)


lin = [slope*i -9 for i in mot_sw]



#plt.plot(mot_sw,regress,label="Régression linéaire")

plt.plot(mot_sw,lin,label="Linéarisation")
plt.plot(mot_sw,bras_sw,'r',linewidth=2,label="Modèle SW")

plt.grid()
plt.legend()
plt.show()
